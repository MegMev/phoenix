"use strict";(self.webpackChunkphoenix_app=self.webpackChunkphoenix_app||[]).push([[471],{7471:(B,b,d)=>{d.r(b),d.d(b,{TWebPaintingPainter:()=>_});var S=d(263),m=d(2454);class _ extends m.tK{updateObject(e){return!!this.matchObjectType(e)&&(this.assignObject(e),!0)}redraw(){const e=this.getObject(),r=this.getAxisToSvgFunc();if(!(null==e?void 0:e.fOper)||!r)return;let u,T,i,a=0,s={},x=null,P="none",p="",l=e.fOper.split(";");const c=t=>{if(t!=P&&(x&&(x.attr("d",p),p="",x=null,P="none"),t))switch(P=t,x=this.draw_g.append("svg:path"),t){case"f":x.call(this.fillatt.func);break;case"l":x.call(this.lineatt.func).style("fill","none");break;case"m":x.call(this.markeratt.func)}},y=(t,h)=>{let n=0,f={_typename:"any"};for(let o=0;o<h.length;++o){let g=t.indexOf(":",n+1);f[h[o]]=parseInt(t.slice(n+1,g>n?g:void 0)),n=g}return f},w=t=>{for(;++t<l.length;)switch(u=l[t][0],u){case"z":this.createAttLine({attr:y(l[t],["fLineColor","fLineStyle","fLineWidth"]),force:!0}),c();continue;case"y":this.createAttFill({attr:y(l[t],["fFillColor","fFillStyle"]),force:!0}),c();continue;case"x":this.createAttMarker({attr:y(l[t],["fMarkerColor","fMarkerStyle","fMarkerSize"]),force:!0}),c();continue;case"o":s=y(l[t],["fTextColor","fTextFont","fTextSize","fTextAlign","fTextAngle"]),s.fTextSize<0&&(s.fTextSize*=-.001),c();continue;case"r":case"b":{c("b"==u?"f":"l");let h=r.x(e.fBuf[a++]),n=r.y(e.fBuf[a++]),f=r.x(e.fBuf[a++]),o=r.y(e.fBuf[a++]);p+=`M${h},${n}h${f-h}v${o-n}h${h-f}z`;continue}case"l":case"f":for(c(u),T=parseInt(l[t].slice(1)),i=0;i<T;++i)p+=(i>0?"L":"M")+r.x(e.fBuf[a++])+","+r.y(e.fBuf[a++]);"f"==u&&(p+="Z");continue;case"m":for(c(u),T=parseInt(l[t].slice(1)),this.markeratt.resetPos(),i=0;i<T;++i)p+=this.markeratt.create(r.x(e.fBuf[a++]),r.y(e.fBuf[a++]));continue;case"h":case"t":if(s.fTextSize){c();let h=s.fTextSize>1?s.fTextSize:this.getPadPainter().getPadHeight()*s.fTextSize,n=s.fTextAngle,f=l[t].slice(1),o=this.draw_g.append("svg:g");if(n>=360&&(n-=360*Math.floor(n/360)),this.startTextDrawing(s.fTextFont,h,o),"h"==u){let g="";for(i=0;i<f.length;i+=2)g+=String.fromCharCode(parseInt(f.slice(i,i+2),16));f=g}return this.drawText({align:s.fTextAlign,x:r.x(e.fBuf[a++]),y:r.y(e.fBuf[a++]),rotate:-n,text:f,color:(0,S.Lq)(s.fTextColor),latex:0,draw_g:o}),this.finishTextDrawing(o).then(()=>w(t))}continue;default:console.log("unsupported operation "+u)}return Promise.resolve(!0)};return this.createG(),w(-1).then(()=>(c(),this))}static draw(e,r){let a=new _(e,r);return a.addToPadPrimitives(),a.redraw()}}}}]);
//# sourceMappingURL=471.0a8995459e552787.js.map