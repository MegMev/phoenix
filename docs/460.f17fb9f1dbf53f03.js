"use strict";(self.webpackChunkphoenix_app=self.webpackChunkphoenix_app||[]).push([[460],{1460:(k,v,l)=>{l.r(v),l.d(v,{drawLeafPlayer:()=>R,drawTree:()=>$,drawTreePlayer:()=>y,drawTreePlayerKey:()=>B});var d=l(1773),M=l(2912),x=l(1227),u=l(1260),P=l(5611),p=l(2454),g=l(7320),I=l(5759),C=l(6462),L=l(3767),c=l(7222);function E(n,e,t){let i=e._typename;return i&&"string"==typeof i?0==i.indexOf("TH1")?g.TH1Painter.draw(n,e,t):0==i.indexOf("TH2")?I.TH2Painter.draw(n,e,t):0==i.indexOf("TH3")?C.TH3Painter.draw(n,e,t):0==i.indexOf("TGraph")?L.o.draw(n,e,t):Promise.reject(Error(`Object of type ${i} cannot be draw with TTree`)):Promise.reject(Error("Object without type cannot be draw with TTree"))}function O(n,e){if(e||this.last_pr){if(this.dump||this.testio){if(!e)return;if((0,d.isBatchMode)()){let i=new P.be(this.drawid);return i.selectDom().property("_json_object_",n),Promise.resolve(i)}if("function"==typeof d.internals.drawInspector)return d.internals.drawInspector(this.drawid,n);let t=(0,d.create)("TObjString");return t.fString=(0,d.toJSON)(n,2),(0,p.VE)(this.drawid,t)}return this.last_pr||(this.last_pr=Promise.resolve(!0)),this.last_pr.then(()=>(this.last_pr=this.obj_painter?this.obj_painter.redrawObject(n).then(()=>this.obj_painter):E(this.drawid,n).then(t=>(this.obj_painter=t,e||(this.last_pr=null),t)),e?this.last_pr:null))}}function D(n){return n.draw_first=!0,n.configureOnline=function(e,t,i,r,s){this.setItemName(e,"",this),this.url=t,this.root_version=r,this.askey=i,this.draw_expr=s},n.configureTree=function(e){this.local_tree=e},n.showExtraButtons=function(e){let t=this.selectDom(),i=this.local_tree?this.local_tree.fEntries:0;t.select(".treedraw_more").remove(),t.select(".treedraw_buttons").node().innerHTML+=`Cut: <input class="treedraw_cut ui-corner-all ui-widget" style="width:8em;margin-left:5px" title="cut expression"></input>Opt: <input class="treedraw_opt ui-corner-all ui-widget" style="width:5em;margin-left:5px" title="histogram draw options"></input>Num: <input class="treedraw_number" type="number" min="0" max="${i}" step="1000" style="width:7em;margin-left:5px" title="number of entries to process (default all)"></input>First: <input class="treedraw_first" type="number" min="0" max="${i}" step="1000" style="width:7em;margin-left:5px" title="first entry to process (default first)"></input><button class="treedraw_clear" title="Clear drawing">Clear</button>`,t.select(".treedraw_exe").on("click",()=>this.performDraw()),t.select(".treedraw_cut").property("value",(null==e?void 0:e.parse_cut)||"").on("change",()=>this.performDraw()),t.select(".treedraw_opt").property("value",(null==e?void 0:e.drawopt)||"").on("change",()=>this.performDraw()),t.select(".treedraw_number").attr("value",(null==e?void 0:e.numentries)||""),t.select(".treedraw_first").attr("value",(null==e?void 0:e.firstentry)||""),t.select(".treedraw_clear").on("click",()=>(0,p.Eq)(this.drawid))},n.showPlayer=function(e){let t=this.selectDom();this.drawid="jsroot_tree_player_"+d.internals.id_counter+++"_draw";let i=(null==e?void 0:e.parse_cut)||(null==e?void 0:e.numentries)||(null==e?void 0:e.firstentry);t.html(`<div style="display:flex; flex-flow:column; height:100%; width:100%;"><div class="treedraw_buttons" style="flex: 0 1 auto;margin-top:0.2em;"><button class="treedraw_exe" title="Execute draw expression" style="margin-left:0.5em">Draw</button>Expr:<input class="treedraw_varexp treedraw_varexp_info" style="width:12em;margin-left:5px" title="draw expression"></input><label class="treedraw_varexp_info">\u24d8</label><button class="treedraw_more">More</button></div><div style="flex: 0 1 auto"><hr/></div><div id="${this.drawid}" style="flex: 1 1 auto; overflow:hidden;"></div></div>`),this.setTopPainter(),this.local_tree&&t.select(".treedraw_buttons").attr("title","Tree draw player for: "+this.local_tree.fName),t.select(".treedraw_exe").on("click",()=>this.performDraw()),t.select(".treedraw_varexp").attr("value",(null==e?void 0:e.parse_expr)||this.draw_expr||"px:py").on("change",()=>this.performDraw()),t.select(".treedraw_varexp_info").attr("title","Example of valid draw expressions:\n  px - 1-dim draw\n  px:py - 2-dim draw\n  px:py:pz - 3-dim draw\n  px+py:px-py - use any expressions\n  px:py>>Graph - create and draw TGraph\n  px:py>>dump - dump extracted variables\n  px:py>>h(50,-5,5,50,-5,5) - custom histogram\n  px:py;hbins:100 - custom number of bins"),i?this.showExtraButtons(e):t.select(".treedraw_more").on("click",()=>this.showExtraButtons(e)),this.checkResize(),(0,c.MG)(this)},n.getValue=function(e){const t=this.selectDom().select(e);if(t.empty())return;const i=t.property("value");return void 0!==i?i:t.attr("value")},n.performLocalDraw=function(){if(!this.local_tree)return;const e=this.selectDom(),t={expr:this.getValue(".treedraw_varexp")};e.select(".treedraw_more").empty()&&(t.cut=this.getValue(".treedraw_cut"),t.cut||delete t.cut,t.drawopt=this.getValue(".treedraw_opt"),"dump"===t.drawopt&&(t.dump=!0,t.drawopt=""),t.drawopt||delete t.drawopt,t.numentries=parseInt(this.getValue(".treedraw_number")),Number.isInteger(t.numentries)||delete t.numentries,t.firstentry=parseInt(this.getValue(".treedraw_first")),Number.isInteger(t.firstentry)||delete t.firstentry),(0,p.Eq)(this.drawid),t.drawid=this.drawid,t.progress=O.bind(t),(0,u.treeDraw)(this.local_tree,t).then(i=>t.progress(i,!0))},n.getDrawOpt=function(){let e="player",t=this.getValue(".treedraw_varexp");return t&&(e+=":"+t),e},n.performDraw=function(){if(this.local_tree)return this.performLocalDraw();let e=this.selectDom(),t=this.url+"/exe.json.gz?compact=3&method=Draw",i=this.getValue(".treedraw_varexp"),r="h_tree_draw",s="",o=i.indexOf(">>");if(o<0)i+=">>"+r;else{r=i.slice(o+2),"+"==r[0]&&(r=r.slice(1));let f=r.indexOf("(");f>0&&(r=r.slice(0,f))}if(e.select(".treedraw_more").empty()){let f=this.getValue(".treedraw_cut"),h=this.getValue(".treedraw_number"),_=this.getValue(".treedraw_first");s=this.getValue(".treedraw_opt"),t+=`&prototype="const char*,const char*,Option_t*,Long64_t,Long64_t"&varexp="${i}"&selection="${f}"`,""==h&&(h=this.root_version>=394499?"TTree::kMaxEntries":"1000000000"),""==_&&(_="0"),t+=`&option="${s}"&nentries=${h}&firstentry=${_}`}else t+=`&prototype="Option_t*"&opt="${i}"`;t+="&_ret_object_="+r;const a=()=>{(0,d.httpRequest)(t,"object").then(f=>{(0,p.Eq)(this.drawid),E(this.drawid,f,s)})};this.draw_expr=i,this.askey?(this.askey=!1,(0,d.httpRequest)(this.url+"/root.json.gz?compact=3","text").then(a)):a()},n.checkResize=function(){(0,p.SI)(this.drawid)},n}function y(n,e,t,i){let r=n.findItem(e),s=n.getTopOnlineItem(r),o="",a=0;if(!r||!s)return null;if(i){for(o=r._name;r&&!r._ttree;)r=r._parent;if(!r)return null;e=n.itemFullName(r)}let f=n.getOnlineItemUrl(e);if(!f)return null;let h=s._root_version||400129,_=n.getDisplay();if(!_)return null;let b=_.findFrame(e,!0);if(!b)return null;let A=(0,M.Ys)(b).attr("id"),w=new P.be(A);if(r._childs&&!i)for(let T=0;T<r._childs.length;++T){let m=r._childs[T];m&&m._kind&&0==m._kind.indexOf("ROOT.TLeaf")&&a<2&&(a++>0&&(o+=":"),o+=m._name)}return D(w),w.configureOnline(e,f,t,h,o),w.showPlayer(),w}function B(n,e){return y(n,e,!0)}function R(n,e){return y(n,e,!1,!0)}function $(n,e,t){let s,o,i=e,r=t;if("TBranchFunc"==e._typename?(r={expr:"."+e.func+"()",branch:e.branch},t&&0==t.indexOf("dump")?r.expr+=">>"+t:t&&(r.expr+=t),i=e.branch.$tree):e.$branch?(r={expr:"."+e.fName+(t||""),branch:e.$branch},(r.branch.fType===u.kClonesNode||r.branch.fType===u.kSTLNode)&&(r.expr=t,r.direct_branch=!0),i=e.$branch.$tree):e.$tree?(!t&&e.fStreamerType&&e.fStreamerType!==x.kt&&e.fStreamerType>=x.C5&&e.fStreamerType<=x.R1&&(t="dump"),r={expr:t,branch:e},i=e.$tree):(r||(r="player"),"string"==typeof r&&(r={expr:r})),!i)throw Error("No TTree object available for TTree::Draw");if("string"==typeof r.expr){let a=r.expr.indexOf("player");0==a?(r.player=!0,r.expr=r.expr.slice(6),":"==r.expr[0]&&(r.expr=r.expr.slice(1))):a>=0&&a==r.expr.length-6&&(r.player=!0,r.expr=r.expr.slice(0,a),a>0&&";"==r.expr[a-1]&&(r.expr=r.expr.slice(0,a-1)))}if(r.player?(s=new p.tK(n,e,t),D(s),s.configureTree(i),s.showPlayer(r),r.drawid=s.drawid):r.drawid=n,r.progress=O.bind(r),"testio"===r.expr)r.testio=!0,r.showProgress=c.Ae,o=(0,u.treeIOTest)(i,r);else{if(!r.expr&&!r.branch)return Promise.resolve(s);o=(0,u.treeDraw)(i,r)}return o.then(a=>r.progress(a,!0))}u.TDrawSelector.prototype.ShowProgress=function(n){if("undefined"==typeof document||(0,d.isBatchMode)())return;if(void 0===n||!Number.isFinite(n))return(0,c.Ae)();if(this.last_progress!==n){let s=n-this.last_progress;this.aver_diff||(this.aver_diff=s),this.aver_diff=.3*s+.7*this.aver_diff}let e=0;this.aver_diff<=0?e=0:this.aver_diff<1e-4?e=3:this.aver_diff<.001?e=2:this.aver_diff<.01&&(e=1);let t=document.createElement("p"),i=document.createTextNode("TTree draw "+(100*n).toFixed(e)+" %  "),r=this;t.appendChild(i),t.title="Click on element to break drawing",t.onclick=function(){if(++r._break<3)return t.title="Tree draw will break after next I/O operation",i.nodeValue="Breaking ... ";r.Abort(),(0,c.Ae)()},(0,c.Ae)(t),this.last_progress=n}}}]);
//# sourceMappingURL=460.f17fb9f1dbf53f03.js.map